#!/usr/bin/env coffee

LedLamp = require('./PatternedLedLamp')
HueMarquee = require('./LedPatterns/HueMarquee')

options = require('optimist')
    .usage("Cycle LED light color in Hue.\nUsage: #{require('path').basename(process.execPath)} [options]\n$0")
    .options 'p',
      alias: 'port'
      default: process.env.CI_MONITOR
      type: 'string'
      description: 'The name of the port connected to Arduio board, leave empty for auto-detect'
    .options 's',
      alias: 'step'
      default: '5'
      type: 'string'
      description: 'The step of color change, increase to reduce the traffic over control serial port'
    .argv

marqueeOptions = 
  hue: 0
  saturation: 100    
  value: 100
  step: parseInt(options.step, 10)

LedLamp.findOrSetByName options.port, (err, led) ->
  return console.error err if err?
    
  console.log "Opening port #{led.portName}..."
  
  led.on 'unknownData', (data) ->
    console.log "> #{data}"
    
  led.ready (led) ->
     console.log "LED is Ready"
     
     led.on 'colorChanged', (ledStatus) ->
       process.stdout.write "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"
       process.stdout.write "Color(RGB): [#{ledStatus.join(',')}]"

     led.applyPattern HueMarquee, marqueeOptions
 