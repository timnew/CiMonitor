#!/usr/bin/env coffee
_ = require('lodash')
LedLamp = require('./LedLamp')
colorConvert = require('color-convert')
util = require('util')

options = require('optimist')
    .usage("Set the LED light.\nUsage: #{require('path').basename(process.execPath)} [options] r/h g/s b/v/l\n$0")
    .options 'P',
      alias: 'profile'
      default: 'rgb'
      type: 'string'
      description: 'Color profile: RGB, HSV, HSL...'
    .options 'p',
      alias: 'port'
      default: process.env.CI_MONITOR
      type: 'string'
      description: 'The name of the port connected to Arduio board, leave empty for auto-detect'
    .demand(3)  
    .argv

components = _.map options._, (num) ->
  parseInt num, 10

controlLed = (portName) ->
  new LedLamp(portName).ready 
 
LedLamp.findOrSetByName options.port, (err, led) ->
  return console.error err if err?
  
  console.log "Connect to #{led.portName}..."

  colorProfile = options.profile

  led.once 'colorChanged', (ledStatus) ->
    console.log "#{colorProfile.toUpperCase()}: #{util.inspect(ledStatus)}"      
    process.exit(0)
  
  led.ready ->  
    switch colorProfile.toLowerCase() 
      when 'rgb' 
        rgb = components
      when 'hsv', 'hsl'
        rgb = colorConvert[colorProfile].rgb(components)
      else
        console.error "Invalid Color Profile: #{colorProfile}"
        return process.exit(1)

    led.setColorRGB rgb
