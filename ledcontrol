#!/usr/bin/env coffee
_ = require('lodash')
LedLamp = require('./LedLamp')
colorConvert = require('color-convert')
util = require('util')

options = require('optimist')
    .usage('Set the LED light.\nUsage: LedControl [options] r/h g/s b/v/l\n$0')
    .options 'c',
      alias: 'color-profile'
      default: 'rgb'
      type: 'string'
      description: 'Color profile: RGB, HSV, HSL'
    .options 'p'
      alias: 'port-name'
      default: null
      type: 'string'
      description: 'Then name of the port connected to Arduio board, leave empty for auto-detect'
    .demand(3)  
    .argv

components = _.map options._, (num) ->
  parseInt num, 10

controlLed = (portName) ->
  new LedLamp(portName).ready (led) ->
    console.log "LED is connected successfully"
    
    colorProfile = options.c.toLowerCase()
    switch colorProfile 
      when 'rgb' 
        rgb = components
      when 'hsv', 'hsl'
        rgb = colorConvert[colorProfile].rgb(components)
      else
        console.error "Invalid Color Profile: #{colorProfile}"
        return process.exit(1)

    led.once 'colorChanged', (ledStatus) ->
      console.log "#{colorProfile.toUpperCase()}: #{util.inspect(ledStatus)}"      
      process.exit(0)
      
    led.setColorRGB rgb
  
if options.p 
  controlLed(options.p)
else
  LedLamp.findUsbPort (err, port) ->
    if err?
      console.error err
      return process.exit(1)
  
    console.log "Found Arduino at #{port.comName}"
    controlLed(port.comName)

